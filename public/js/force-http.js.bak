// force-http.js - Script para forzar HTTP y prevenir errores CORS
(function() {
  'use strict';
  
  // Si estamos en HTTPS, redirigir inmediatamente
  if (window.location.protocol === 'https:') {
    console.warn('Detectado HTTPS - Redirigiendo a HTTP...');
    const httpUrl = 'http://' + window.location.hostname + ':9008' + window.location.pathname + window.location.search + window.location.hash;
    window.location.replace(httpUrl);
    
    // Prevenir CUALQUIER ejecución adicional
    window.stop && window.stop();
    throw new Error('Redirigiendo a HTTP');
  }
  
  // Interceptar TODAS las llamadas fetch para asegurar que usen HTTP
  const originalFetch = window.fetch;
  window.fetch = function(url, options) {
    // Convertir URL relativa a absoluta
    let absoluteUrl = url;
    if (typeof url === 'string') {
      if (url.startsWith('/')) {
        // URL relativa - construir URL completa con HTTP
        absoluteUrl = 'http://' + window.location.hostname + ':9008' + url;
      } else if (url.startsWith('https://')) {
        // Si alguien intenta usar HTTPS, convertir a HTTP
        absoluteUrl = url.replace('https://', 'http://');
      }
    }
    
    console.log('Fetch interceptado:', absoluteUrl);
    return originalFetch.call(this, absoluteUrl, options);
  };
  
  // Interceptar XMLHttpRequest también
  const originalOpen = XMLHttpRequest.prototype.open;
  XMLHttpRequest.prototype.open = function(method, url, async, user, pass) {
    let absoluteUrl = url;
    if (typeof url === 'string') {
      if (url.startsWith('/')) {
        absoluteUrl = 'http://' + window.location.hostname + ':9008' + url;
      } else if (url.startsWith('https://')) {
        absoluteUrl = url.replace('https://', 'http://');
      }
    }
    
    console.log('XHR interceptado:', absoluteUrl);
    return originalOpen.call(this, method, absoluteUrl, async, user, pass);
  };
})();
